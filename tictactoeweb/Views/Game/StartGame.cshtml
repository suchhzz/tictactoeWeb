@model tictactoeweb.Models.GameModels.GameViewModel;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/site.css" />
    <title>JavaScript</title>
</head>
<body>
    <div class="main-container d-flex">
        <div class="content">
            <div>
                <p>username: @Model.CurrentUser.Username</p>
            </div>
            <table>
                <tr>
                    <td><input type="button" data-cell-index="0" id="0" class="cell" onclick="makeMove(0)" /></td>
                    <td><input type="button" data-cell-index="1" id="1" class="cell" onclick="makeMove(1)" /></td>
                    <td><input type="button" data-cell-index="2" id="2" class="cell" onclick="makeMove(2)" /></td>
                </tr>
                <tr>
                    <td><input type="button" data-cell-index="3" id="3" class="cell" onclick="makeMove(3)" /></td>
                    <td><input type="button" data-cell-index="4" id="4" class="cell" onclick="makeMove(4)" /></td>
                    <td><input type="button" data-cell-index="5" id="5" class="cell" onclick="makeMove(5)" /></td>
                </tr>
                <tr>
                    <td><input type="button" data-cell-index="6" id="6" class="cell" onclick="makeMove(6)" /></td>
                    <td><input type="button" data-cell-index="7" id="7" class="cell" onclick="makeMove(7)" /></td>
                    <td><input type="button" data-cell-index="8" id="8" class="cell" onclick="makeMove(8)" /></td>
                </tr>
            </table>
            <div class="after-game">
                <div id="result"></div>
                <div>
                    <form class="home-button-form d-flex" asp-controller="Home" asp-action="Index">
                        <input type="submit" value="Home" id="homeButton" style="display:none;"/>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>

    <script>
        const hubConnection = new signalR.HubConnectionBuilder()
            .withUrl("/game")
            .build();

        let playerId = 0;

        function makeMove(cell) {
                 hubConnection.invoke("PlayerMove", '@Model.currentRoom.RoomId', cell)
                     .then(function () {
                         console.log(`player clicked on ${cell}`);
                     });
        }

        function unlockButtons(passMove) {
            let cells = document.querySelectorAll('.cell[data-cell-index]');
            
            if (playerId == passMove) {
                cells.forEach(function (item) {
                    item.disabled = false;
                });
            }
            else { 
                cells.forEach(function (item) {
                    item.disabled = true;
                });
            }
        }

        function disableButtons() {
            let cells = document.querySelectorAll('.cell[data-cell-index]');

            cells.forEach(function (item) {
                item.disabled = true;
            })
        }

        function showHomeButton() {
            const homeBtn = document.getElementById("homeButton");
            homeBtn.style.display = 'flex';
        }

        hubConnection.start()
            .then(function () {

                let cells = document.querySelectorAll('.cell[data-cell-index]');
                cells.forEach(function (item) {
                    item.disabled = true;
                });

                hubConnection.on("GameOver", function (winMessage) {

                    console.log("win message: " + winMessage);

                    let resultElement = document.createElement("p");
                    let resultText = document.createTextNode(winMessage);

                    resultElement.appendChild(resultText);
                    document.getElementById("result").appendChild(resultElement);

                    disableButtons();
                    showHomeButton();
                });

                hubConnection.on("ReceiveMove", function (passMove, cell) {
                    const buttonElem = document.getElementById(`${cell}`);

                    if (passMove === 1) {
                        buttonElem.style.backgroundColor = "red";
                    }
                    else {
                        buttonElem.style.backgroundColor = "blue";
                    }
                });

                hubConnection.on("ChangePlayerTurn", function (passMove) {
                    unlockButtons(passMove);
                });

                hubConnection.on("PlayerId", function (id, passMove) {
                    playerId = id;

                    console.log("playerId received: " + id);

                    unlockButtons(passMove);
                });

                hubConnection.invoke("JoinPlayer", '@Model.currentRoom.RoomId')
                    .then(function () {
                        console.log("player added");
                    });
                hubConnection.invoke("PlayerSettings", '@Model.currentRoom.RoomId', '@Model.CurrentUser.Id');

            })
            .catch(function (err) {
                return console.error(err.toString());
            });
    </script>

</body>
</html>